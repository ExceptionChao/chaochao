<?xml version="1.0" encoding="UTF-8"?>
<!--
	Licensed to the Apache Software Foundation (ASF) under one
	or more contributor license agreements. See the NOTICE file
	distributed with this work for additional information
	regarding copyright ownership. The ASF licenses this file
	to you under the Apache License, Version 2.0 (the
	"License"); you may not use this file except in compliance
	with the License. You may obtain a copy of the License at
	
	http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing,
	software distributed under the License is distributed on an
	"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
	KIND, either express or implied. See the License for the
	specific language governing permissions and limitations
	under the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc
       	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd"
	    default-lazy-init="true">
	    
	    
	    <import resource="classpath:com/hiaward/ebs/appserver/spring/applicationContext-jedis.xml" />
	    

		<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
           <list>
              <!-- 这里支持多种寻址方式：classpath和file -->
              <value>classpath:/com/hiaward/ebs/appserver/spring/appserverConf.properties</value>
              <!-- 推荐使用file的方式引入，这样可以将配置和代码分离 -->
<!--               <value>file:/opt/demo/config/demo-mq.properties</value> -->
            </list>  
        </property>  
    </bean>

<!-- 	<mvc:interceptors> -->
    <!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
<!--     <bean class="com.hiaward.ebs.appserver.AppServerHandlerInterceptorAdapter" > -->
<!--     <constructor-arg name="characterEncoding" value="UTF-8"></constructor-arg> -->
<!--     </bean> -->
<!-- 	</mvc:interceptors> -->
	
	<!-- 自定义参数处理，将HttpServletRequest中servletpath和params封装，在此隔离controller层和servlet接口 -->
	<bean id="AppServerArgumentResolver" class="com.hiaward.ebs.appserver.resolver.AppServerArgumentResolver">
	</bean>
	
	<!-- 默认处理url到对应后台处理类 -->
	<bean id="defaultMappingDistHost" class="com.hiaward.ebs.appserver.DefaultMappingDistHostAdapter" scope="prototype">
	<constructor-arg index="0" value="${middile_encode}"></constructor-arg>
	<constructor-arg index="1" value="${isNeedDecryptAndEncrypt}"></constructor-arg>
	</bean>
	<!-- RSA加解密类 -->
	<bean id="RSAalgorithmSupport" class="com.hiaward.ebs.appserver.util.RSAalgorithmSupport"></bean>
	<!-- DES加解密类 -->
	<bean id="DESalgorithmSupport" class="com.hiaward.ebs.appserver.util.DESalgorithmSupport"></bean>
			
</beans>
